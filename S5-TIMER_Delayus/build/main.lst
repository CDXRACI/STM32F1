ARM GAS  /tmp/cc6eY2s1.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cc6eY2s1.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef huart1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_TIM3_Init(void);
  54:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** void delay_us(uint64_t count)
  57:Core/Src/main.c **** {
  58:Core/Src/main.c ****  __HAL_TIM_SetCounter(&htim3, 0);
  59:Core/Src/main.c ****  while (__HAL_TIM_GetCounter(&htim3) < count);
  60:Core/Src/main.c **** }
  61:Core/Src/main.c **** void delay_ms(uint16_t time)
  62:Core/Src/main.c **** {
  63:Core/Src/main.c ****  uint16_t i = 0;
  64:Core/Src/main.c ****  for(i = 0; i < time; i++)
  65:Core/Src/main.c ****  {
  66:Core/Src/main.c ****    delay_us(1000);
  67:Core/Src/main.c ****  }
  68:Core/Src/main.c **** }
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
ARM GAS  /tmp/cc6eY2s1.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   MX_TIM3_Init();
 105:Core/Src/main.c ****   MX_USART1_UART_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim2);
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/cc6eY2s1.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 161:Core/Src/main.c ****   * @param None
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** static void MX_TIM3_Init(void)
 165:Core/Src/main.c **** {
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 172:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 177:Core/Src/main.c ****   htim3.Instance = TIM3;
 178:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 179:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 180:Core/Src/main.c ****   htim3.Init.Period = 65535;
 181:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 182:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 183:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 188:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 193:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 194:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** }
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /**
ARM GAS  /tmp/cc6eY2s1.s 			page 5


 205:Core/Src/main.c ****   * @brief USART1 Initialization Function
 206:Core/Src/main.c ****   * @param None
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 210:Core/Src/main.c **** {
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 219:Core/Src/main.c ****   huart1.Instance = USART1;
 220:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 221:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 222:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 223:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 224:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 225:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 226:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 227:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 228:Core/Src/main.c ****   {
 229:Core/Src/main.c ****     Error_Handler();
 230:Core/Src/main.c ****   }
 231:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /**
 238:Core/Src/main.c ****   * @brief GPIO Initialization Function
 239:Core/Src/main.c ****   * @param None
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** static void MX_GPIO_Init(void)
 243:Core/Src/main.c **** {
  26              		.loc 1 243 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 244:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 244 3 view .LVU1
  40              		.loc 1 244 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/cc6eY2s1.s 			page 6


  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 247:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 247 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 247 3 view .LVU4
  49              		.loc 1 247 3 view .LVU5
  50 000e 134B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 247 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 247 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 247 3 view .LVU8
 248:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 248 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 248 3 view .LVU10
  65              		.loc 1 248 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 248 3 view .LVU12
  70 002a 9B69     		ldr	r3, [r3, #24]
  71 002c 03F00403 		and	r3, r3, #4
  72 0030 0193     		str	r3, [sp, #4]
  73              		.loc 1 248 3 view .LVU13
  74 0032 019B     		ldr	r3, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 248 3 view .LVU14
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 251:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
  77              		.loc 1 251 3 view .LVU15
  78 0034 0A4D     		ldr	r5, .L3+4
  79 0036 2246     		mov	r2, r4
  80 0038 E021     		movs	r1, #224
  81 003a 2846     		mov	r0, r5
  82 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /*Configure GPIO pins : PA5 PA6 PA7 */
 254:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
  84              		.loc 1 254 3 view .LVU16
  85              		.loc 1 254 23 is_stmt 0 view .LVU17
  86 0040 E023     		movs	r3, #224
  87 0042 0293     		str	r3, [sp, #8]
 255:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 255 3 is_stmt 1 view .LVU18
ARM GAS  /tmp/cc6eY2s1.s 			page 7


  89              		.loc 1 255 24 is_stmt 0 view .LVU19
  90 0044 0123     		movs	r3, #1
  91 0046 0393     		str	r3, [sp, #12]
 256:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 256 3 is_stmt 1 view .LVU20
  93              		.loc 1 256 24 is_stmt 0 view .LVU21
  94 0048 0494     		str	r4, [sp, #16]
 257:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 257 3 is_stmt 1 view .LVU22
  96              		.loc 1 257 25 is_stmt 0 view .LVU23
  97 004a 0223     		movs	r3, #2
  98 004c 0593     		str	r3, [sp, #20]
 258:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  99              		.loc 1 258 3 is_stmt 1 view .LVU24
 100 004e 02A9     		add	r1, sp, #8
 101 0050 2846     		mov	r0, r5
 102 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** }
 104              		.loc 1 260 1 is_stmt 0 view .LVU25
 105 0056 07B0     		add	sp, sp, #28
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 12
 108              		@ sp needed
 109 0058 30BD     		pop	{r4, r5, pc}
 110              	.L4:
 111 005a 00BF     		.align	2
 112              	.L3:
 113 005c 00100240 		.word	1073876992
 114 0060 00080140 		.word	1073809408
 115              		.cfi_endproc
 116              	.LFE71:
 118              		.section	.text.delay_us,"ax",%progbits
 119              		.align	1
 120              		.global	delay_us
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 126              	delay_us:
 127              	.LVL2:
 128              	.LFB65:
  57:Core/Src/main.c ****  __HAL_TIM_SetCounter(&htim3, 0);
 129              		.loc 1 57 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
  58:Core/Src/main.c ****  while (__HAL_TIM_GetCounter(&htim3) < count);
 134              		.loc 1 58 2 view .LVU27
 135 0000 054B     		ldr	r3, .L7
 136 0002 1A68     		ldr	r2, [r3]
 137 0004 0023     		movs	r3, #0
 138 0006 5362     		str	r3, [r2, #36]
  59:Core/Src/main.c **** }
 139              		.loc 1 59 2 view .LVU28
ARM GAS  /tmp/cc6eY2s1.s 			page 8


 140              	.L6:
  59:Core/Src/main.c **** }
 141              		.loc 1 59 46 discriminator 1 view .LVU29
  59:Core/Src/main.c **** }
 142              		.loc 1 59 8 discriminator 1 view .LVU30
  59:Core/Src/main.c **** }
 143              		.loc 1 59 9 is_stmt 0 discriminator 1 view .LVU31
 144 0008 536A     		ldr	r3, [r2, #36]
  59:Core/Src/main.c **** }
 145              		.loc 1 59 8 discriminator 1 view .LVU32
 146 000a 8342     		cmp	r3, r0
 147 000c 4FF00003 		mov	r3, #0
 148 0010 8B41     		sbcs	r3, r3, r1
 149 0012 F9D3     		bcc	.L6
  60:Core/Src/main.c **** void delay_ms(uint16_t time)
 150              		.loc 1 60 1 view .LVU33
 151 0014 7047     		bx	lr
 152              	.L8:
 153 0016 00BF     		.align	2
 154              	.L7:
 155 0018 00000000 		.word	.LANCHOR0
 156              		.cfi_endproc
 157              	.LFE65:
 159              		.section	.text.delay_ms,"ax",%progbits
 160              		.align	1
 161              		.global	delay_ms
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	delay_ms:
 168              	.LVL3:
 169              	.LFB66:
  62:Core/Src/main.c ****  uint16_t i = 0;
 170              		.loc 1 62 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
  62:Core/Src/main.c ****  uint16_t i = 0;
 174              		.loc 1 62 1 is_stmt 0 view .LVU35
 175 0000 38B5     		push	{r3, r4, r5, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 3, -16
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 5, -8
 181              		.cfi_offset 14, -4
 182 0002 0546     		mov	r5, r0
  63:Core/Src/main.c ****  for(i = 0; i < time; i++)
 183              		.loc 1 63 2 is_stmt 1 view .LVU36
 184              	.LVL4:
  64:Core/Src/main.c ****  {
 185              		.loc 1 64 2 view .LVU37
  64:Core/Src/main.c ****  {
 186              		.loc 1 64 8 is_stmt 0 view .LVU38
 187 0004 0024     		movs	r4, #0
  64:Core/Src/main.c ****  {
ARM GAS  /tmp/cc6eY2s1.s 			page 9


 188              		.loc 1 64 2 view .LVU39
 189 0006 06E0     		b	.L10
 190              	.LVL5:
 191              	.L11:
  66:Core/Src/main.c ****  }
 192              		.loc 1 66 4 is_stmt 1 discriminator 3 view .LVU40
 193 0008 4FF47A70 		mov	r0, #1000
 194 000c 0021     		movs	r1, #0
 195 000e FFF7FEFF 		bl	delay_us
 196              	.LVL6:
  64:Core/Src/main.c ****  {
 197              		.loc 1 64 23 discriminator 3 view .LVU41
  64:Core/Src/main.c ****  {
 198              		.loc 1 64 24 is_stmt 0 discriminator 3 view .LVU42
 199 0012 0134     		adds	r4, r4, #1
 200              	.LVL7:
  64:Core/Src/main.c ****  {
 201              		.loc 1 64 24 discriminator 3 view .LVU43
 202 0014 A4B2     		uxth	r4, r4
 203              	.LVL8:
 204              	.L10:
  64:Core/Src/main.c ****  {
 205              		.loc 1 64 13 is_stmt 1 discriminator 1 view .LVU44
  64:Core/Src/main.c ****  {
 206              		.loc 1 64 2 is_stmt 0 discriminator 1 view .LVU45
 207 0016 AC42     		cmp	r4, r5
 208 0018 F6D3     		bcc	.L11
  68:Core/Src/main.c **** /* USER CODE END PFP */
 209              		.loc 1 68 1 view .LVU46
 210 001a 38BD     		pop	{r3, r4, r5, pc}
  68:Core/Src/main.c **** /* USER CODE END PFP */
 211              		.loc 1 68 1 view .LVU47
 212              		.cfi_endproc
 213              	.LFE66:
 215              		.section	.text.Error_Handler,"ax",%progbits
 216              		.align	1
 217              		.global	Error_Handler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	Error_Handler:
 224              	.LFB72:
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /* USER CODE END 4 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 268:Core/Src/main.c ****   * @retval None
 269:Core/Src/main.c ****   */
 270:Core/Src/main.c **** void Error_Handler(void)
 271:Core/Src/main.c **** {
 225              		.loc 1 271 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ Volatile: function does not return.
ARM GAS  /tmp/cc6eY2s1.s 			page 10


 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 272:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 273:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 274:Core/Src/main.c ****   __disable_irq();
 231              		.loc 1 274 3 view .LVU49
 232              	.LBB6:
 233              	.LBI6:
 234              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /tmp/cc6eY2s1.s 			page 11


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/cc6eY2s1.s 			page 12


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 235              		.loc 2 140 27 view .LVU50
 236              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 237              		.loc 2 142 3 view .LVU51
 238              		.syntax unified
 239              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 240 0000 72B6     		cpsid i
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244              	.L14:
 245              	.LBE7:
 246              	.LBE6:
 275:Core/Src/main.c ****   while (1)
 247              		.loc 1 275 3 discriminator 1 view .LVU52
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****   }
 248              		.loc 1 277 3 discriminator 1 view .LVU53
 275:Core/Src/main.c ****   while (1)
 249              		.loc 1 275 9 discriminator 1 view .LVU54
ARM GAS  /tmp/cc6eY2s1.s 			page 13


 250 0002 FEE7     		b	.L14
 251              		.cfi_endproc
 252              	.LFE72:
 254              		.section	.text.MX_TIM3_Init,"ax",%progbits
 255              		.align	1
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	MX_TIM3_Init:
 262              	.LFB69:
 165:Core/Src/main.c **** 
 263              		.loc 1 165 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 24
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 00B5     		push	{lr}
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 14, -4
 271 0002 87B0     		sub	sp, sp, #28
 272              	.LCFI5:
 273              		.cfi_def_cfa_offset 32
 171:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 274              		.loc 1 171 3 view .LVU56
 171:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 275              		.loc 1 171 26 is_stmt 0 view .LVU57
 276 0004 0023     		movs	r3, #0
 277 0006 0293     		str	r3, [sp, #8]
 278 0008 0393     		str	r3, [sp, #12]
 279 000a 0493     		str	r3, [sp, #16]
 280 000c 0593     		str	r3, [sp, #20]
 172:Core/Src/main.c **** 
 281              		.loc 1 172 3 is_stmt 1 view .LVU58
 172:Core/Src/main.c **** 
 282              		.loc 1 172 27 is_stmt 0 view .LVU59
 283 000e 0093     		str	r3, [sp]
 284 0010 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 285              		.loc 1 177 3 is_stmt 1 view .LVU60
 177:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 286              		.loc 1 177 18 is_stmt 0 view .LVU61
 287 0012 1348     		ldr	r0, .L23
 288 0014 134A     		ldr	r2, .L23+4
 289 0016 0260     		str	r2, [r0]
 178:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 290              		.loc 1 178 3 is_stmt 1 view .LVU62
 178:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 291              		.loc 1 178 24 is_stmt 0 view .LVU63
 292 0018 4360     		str	r3, [r0, #4]
 179:Core/Src/main.c ****   htim3.Init.Period = 65535;
 293              		.loc 1 179 3 is_stmt 1 view .LVU64
 179:Core/Src/main.c ****   htim3.Init.Period = 65535;
 294              		.loc 1 179 26 is_stmt 0 view .LVU65
 295 001a 8360     		str	r3, [r0, #8]
 180:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 296              		.loc 1 180 3 is_stmt 1 view .LVU66
ARM GAS  /tmp/cc6eY2s1.s 			page 14


 180:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 297              		.loc 1 180 21 is_stmt 0 view .LVU67
 298 001c 4FF6FF72 		movw	r2, #65535
 299 0020 C260     		str	r2, [r0, #12]
 181:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 300              		.loc 1 181 3 is_stmt 1 view .LVU68
 181:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 301              		.loc 1 181 28 is_stmt 0 view .LVU69
 302 0022 0361     		str	r3, [r0, #16]
 182:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 303              		.loc 1 182 3 is_stmt 1 view .LVU70
 182:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 304              		.loc 1 182 32 is_stmt 0 view .LVU71
 305 0024 8361     		str	r3, [r0, #24]
 183:Core/Src/main.c ****   {
 306              		.loc 1 183 3 is_stmt 1 view .LVU72
 183:Core/Src/main.c ****   {
 307              		.loc 1 183 7 is_stmt 0 view .LVU73
 308 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 309              	.LVL9:
 183:Core/Src/main.c ****   {
 310              		.loc 1 183 6 view .LVU74
 311 002a 90B9     		cbnz	r0, .L20
 187:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 312              		.loc 1 187 3 is_stmt 1 view .LVU75
 187:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 313              		.loc 1 187 34 is_stmt 0 view .LVU76
 314 002c 4FF48053 		mov	r3, #4096
 315 0030 0293     		str	r3, [sp, #8]
 188:Core/Src/main.c ****   {
 316              		.loc 1 188 3 is_stmt 1 view .LVU77
 188:Core/Src/main.c ****   {
 317              		.loc 1 188 7 is_stmt 0 view .LVU78
 318 0032 02A9     		add	r1, sp, #8
 319 0034 0A48     		ldr	r0, .L23
 320 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 321              	.LVL10:
 188:Core/Src/main.c ****   {
 322              		.loc 1 188 6 view .LVU79
 323 003a 60B9     		cbnz	r0, .L21
 192:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 324              		.loc 1 192 3 is_stmt 1 view .LVU80
 192:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 325              		.loc 1 192 37 is_stmt 0 view .LVU81
 326 003c 0023     		movs	r3, #0
 327 003e 0093     		str	r3, [sp]
 193:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 328              		.loc 1 193 3 is_stmt 1 view .LVU82
 193:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 329              		.loc 1 193 33 is_stmt 0 view .LVU83
 330 0040 0193     		str	r3, [sp, #4]
 194:Core/Src/main.c ****   {
 331              		.loc 1 194 3 is_stmt 1 view .LVU84
 194:Core/Src/main.c ****   {
 332              		.loc 1 194 7 is_stmt 0 view .LVU85
 333 0042 6946     		mov	r1, sp
 334 0044 0648     		ldr	r0, .L23
ARM GAS  /tmp/cc6eY2s1.s 			page 15


 335 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 336              	.LVL11:
 194:Core/Src/main.c ****   {
 337              		.loc 1 194 6 view .LVU86
 338 004a 30B9     		cbnz	r0, .L22
 202:Core/Src/main.c **** 
 339              		.loc 1 202 1 view .LVU87
 340 004c 07B0     		add	sp, sp, #28
 341              	.LCFI6:
 342              		.cfi_remember_state
 343              		.cfi_def_cfa_offset 4
 344              		@ sp needed
 345 004e 5DF804FB 		ldr	pc, [sp], #4
 346              	.L20:
 347              	.LCFI7:
 348              		.cfi_restore_state
 185:Core/Src/main.c ****   }
 349              		.loc 1 185 5 is_stmt 1 view .LVU88
 350 0052 FFF7FEFF 		bl	Error_Handler
 351              	.LVL12:
 352              	.L21:
 190:Core/Src/main.c ****   }
 353              		.loc 1 190 5 view .LVU89
 354 0056 FFF7FEFF 		bl	Error_Handler
 355              	.LVL13:
 356              	.L22:
 196:Core/Src/main.c ****   }
 357              		.loc 1 196 5 view .LVU90
 358 005a FFF7FEFF 		bl	Error_Handler
 359              	.LVL14:
 360              	.L24:
 361 005e 00BF     		.align	2
 362              	.L23:
 363 0060 00000000 		.word	.LANCHOR0
 364 0064 00040040 		.word	1073742848
 365              		.cfi_endproc
 366              	.LFE69:
 368              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu softvfp
 375              	MX_USART1_UART_Init:
 376              	.LFB70:
 210:Core/Src/main.c **** 
 377              		.loc 1 210 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 08B5     		push	{r3, lr}
 382              	.LCFI8:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 219:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 386              		.loc 1 219 3 view .LVU92
ARM GAS  /tmp/cc6eY2s1.s 			page 16


 219:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 387              		.loc 1 219 19 is_stmt 0 view .LVU93
 388 0002 0A48     		ldr	r0, .L29
 389 0004 0A4B     		ldr	r3, .L29+4
 390 0006 0360     		str	r3, [r0]
 220:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 391              		.loc 1 220 3 is_stmt 1 view .LVU94
 220:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 392              		.loc 1 220 24 is_stmt 0 view .LVU95
 393 0008 4FF4E133 		mov	r3, #115200
 394 000c 4360     		str	r3, [r0, #4]
 221:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 395              		.loc 1 221 3 is_stmt 1 view .LVU96
 221:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 396              		.loc 1 221 26 is_stmt 0 view .LVU97
 397 000e 0023     		movs	r3, #0
 398 0010 8360     		str	r3, [r0, #8]
 222:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 399              		.loc 1 222 3 is_stmt 1 view .LVU98
 222:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 400              		.loc 1 222 24 is_stmt 0 view .LVU99
 401 0012 C360     		str	r3, [r0, #12]
 223:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 402              		.loc 1 223 3 is_stmt 1 view .LVU100
 223:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 403              		.loc 1 223 22 is_stmt 0 view .LVU101
 404 0014 0361     		str	r3, [r0, #16]
 224:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 405              		.loc 1 224 3 is_stmt 1 view .LVU102
 224:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 406              		.loc 1 224 20 is_stmt 0 view .LVU103
 407 0016 0C22     		movs	r2, #12
 408 0018 4261     		str	r2, [r0, #20]
 225:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 409              		.loc 1 225 3 is_stmt 1 view .LVU104
 225:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 410              		.loc 1 225 25 is_stmt 0 view .LVU105
 411 001a 8361     		str	r3, [r0, #24]
 226:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 412              		.loc 1 226 3 is_stmt 1 view .LVU106
 226:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 413              		.loc 1 226 28 is_stmt 0 view .LVU107
 414 001c C361     		str	r3, [r0, #28]
 227:Core/Src/main.c ****   {
 415              		.loc 1 227 3 is_stmt 1 view .LVU108
 227:Core/Src/main.c ****   {
 416              		.loc 1 227 7 is_stmt 0 view .LVU109
 417 001e FFF7FEFF 		bl	HAL_UART_Init
 418              	.LVL15:
 227:Core/Src/main.c ****   {
 419              		.loc 1 227 6 view .LVU110
 420 0022 00B9     		cbnz	r0, .L28
 235:Core/Src/main.c **** 
 421              		.loc 1 235 1 view .LVU111
 422 0024 08BD     		pop	{r3, pc}
 423              	.L28:
 229:Core/Src/main.c ****   }
ARM GAS  /tmp/cc6eY2s1.s 			page 17


 424              		.loc 1 229 5 is_stmt 1 view .LVU112
 425 0026 FFF7FEFF 		bl	Error_Handler
 426              	.LVL16:
 427              	.L30:
 428 002a 00BF     		.align	2
 429              	.L29:
 430 002c 00000000 		.word	.LANCHOR1
 431 0030 00380140 		.word	1073821696
 432              		.cfi_endproc
 433              	.LFE70:
 435              		.section	.text.SystemClock_Config,"ax",%progbits
 436              		.align	1
 437              		.global	SystemClock_Config
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu softvfp
 443              	SystemClock_Config:
 444              	.LFB68:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 445              		.loc 1 126 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 64
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 00B5     		push	{lr}
 450              	.LCFI9:
 451              		.cfi_def_cfa_offset 4
 452              		.cfi_offset 14, -4
 453 0002 91B0     		sub	sp, sp, #68
 454              	.LCFI10:
 455              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 456              		.loc 1 127 3 view .LVU114
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 457              		.loc 1 127 22 is_stmt 0 view .LVU115
 458 0004 2822     		movs	r2, #40
 459 0006 0021     		movs	r1, #0
 460 0008 06A8     		add	r0, sp, #24
 461 000a FFF7FEFF 		bl	memset
 462              	.LVL17:
 128:Core/Src/main.c **** 
 463              		.loc 1 128 3 is_stmt 1 view .LVU116
 128:Core/Src/main.c **** 
 464              		.loc 1 128 22 is_stmt 0 view .LVU117
 465 000e 0023     		movs	r3, #0
 466 0010 0193     		str	r3, [sp, #4]
 467 0012 0293     		str	r3, [sp, #8]
 468 0014 0393     		str	r3, [sp, #12]
 469 0016 0493     		str	r3, [sp, #16]
 470 0018 0593     		str	r3, [sp, #20]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 471              		.loc 1 133 3 is_stmt 1 view .LVU118
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 472              		.loc 1 133 36 is_stmt 0 view .LVU119
 473 001a 0223     		movs	r3, #2
 474 001c 0693     		str	r3, [sp, #24]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/cc6eY2s1.s 			page 18


 475              		.loc 1 134 3 is_stmt 1 view .LVU120
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 476              		.loc 1 134 30 is_stmt 0 view .LVU121
 477 001e 0122     		movs	r2, #1
 478 0020 0A92     		str	r2, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 479              		.loc 1 135 3 is_stmt 1 view .LVU122
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 480              		.loc 1 135 41 is_stmt 0 view .LVU123
 481 0022 1022     		movs	r2, #16
 482 0024 0B92     		str	r2, [sp, #44]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 483              		.loc 1 136 3 is_stmt 1 view .LVU124
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 484              		.loc 1 136 34 is_stmt 0 view .LVU125
 485 0026 0D93     		str	r3, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 486              		.loc 1 137 3 is_stmt 1 view .LVU126
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 487              		.loc 1 138 3 view .LVU127
 139:Core/Src/main.c ****   {
 488              		.loc 1 139 3 view .LVU128
 139:Core/Src/main.c ****   {
 489              		.loc 1 139 7 is_stmt 0 view .LVU129
 490 0028 06A8     		add	r0, sp, #24
 491 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
 492              	.LVL18:
 139:Core/Src/main.c ****   {
 493              		.loc 1 139 6 view .LVU130
 494 002e 70B9     		cbnz	r0, .L35
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 495              		.loc 1 146 3 is_stmt 1 view .LVU131
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 496              		.loc 1 146 31 is_stmt 0 view .LVU132
 497 0030 0F23     		movs	r3, #15
 498 0032 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 499              		.loc 1 148 3 is_stmt 1 view .LVU133
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 500              		.loc 1 148 34 is_stmt 0 view .LVU134
 501 0034 0223     		movs	r3, #2
 502 0036 0293     		str	r3, [sp, #8]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 503              		.loc 1 149 3 is_stmt 1 view .LVU135
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 504              		.loc 1 149 35 is_stmt 0 view .LVU136
 505 0038 0021     		movs	r1, #0
 506 003a 0391     		str	r1, [sp, #12]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 507              		.loc 1 150 3 is_stmt 1 view .LVU137
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 508              		.loc 1 150 36 is_stmt 0 view .LVU138
 509 003c 0491     		str	r1, [sp, #16]
 151:Core/Src/main.c **** 
 510              		.loc 1 151 3 is_stmt 1 view .LVU139
 151:Core/Src/main.c **** 
 511              		.loc 1 151 36 is_stmt 0 view .LVU140
ARM GAS  /tmp/cc6eY2s1.s 			page 19


 512 003e 0591     		str	r1, [sp, #20]
 153:Core/Src/main.c ****   {
 513              		.loc 1 153 3 is_stmt 1 view .LVU141
 153:Core/Src/main.c ****   {
 514              		.loc 1 153 7 is_stmt 0 view .LVU142
 515 0040 01A8     		add	r0, sp, #4
 516 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 517              	.LVL19:
 153:Core/Src/main.c ****   {
 518              		.loc 1 153 6 view .LVU143
 519 0046 20B9     		cbnz	r0, .L36
 157:Core/Src/main.c **** 
 520              		.loc 1 157 1 view .LVU144
 521 0048 11B0     		add	sp, sp, #68
 522              	.LCFI11:
 523              		.cfi_remember_state
 524              		.cfi_def_cfa_offset 4
 525              		@ sp needed
 526 004a 5DF804FB 		ldr	pc, [sp], #4
 527              	.L35:
 528              	.LCFI12:
 529              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 530              		.loc 1 141 5 is_stmt 1 view .LVU145
 531 004e FFF7FEFF 		bl	Error_Handler
 532              	.LVL20:
 533              	.L36:
 155:Core/Src/main.c ****   }
 534              		.loc 1 155 5 view .LVU146
 535 0052 FFF7FEFF 		bl	Error_Handler
 536              	.LVL21:
 537              		.cfi_endproc
 538              	.LFE68:
 540              		.section	.text.main,"ax",%progbits
 541              		.align	1
 542              		.global	main
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu softvfp
 548              	main:
 549              	.LFB67:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 550              		.loc 1 81 1 view -0
 551              		.cfi_startproc
 552              		@ Volatile: function does not return.
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555 0000 08B5     		push	{r3, lr}
 556              	.LCFI13:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 3, -8
 559              		.cfi_offset 14, -4
  89:Core/Src/main.c **** 
 560              		.loc 1 89 3 view .LVU148
 561 0002 FFF7FEFF 		bl	HAL_Init
 562              	.LVL22:
ARM GAS  /tmp/cc6eY2s1.s 			page 20


  96:Core/Src/main.c **** 
 563              		.loc 1 96 3 view .LVU149
 564 0006 FFF7FEFF 		bl	SystemClock_Config
 565              	.LVL23:
 103:Core/Src/main.c ****   MX_TIM3_Init();
 566              		.loc 1 103 3 view .LVU150
 567 000a FFF7FEFF 		bl	MX_GPIO_Init
 568              	.LVL24:
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 569              		.loc 1 104 3 view .LVU151
 570 000e FFF7FEFF 		bl	MX_TIM3_Init
 571              	.LVL25:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 572              		.loc 1 105 3 view .LVU152
 573 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 574              	.LVL26:
 575              	.L38:
 112:Core/Src/main.c ****   {
 576              		.loc 1 112 3 discriminator 1 view .LVU153
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 577              		.loc 1 117 3 discriminator 1 view .LVU154
 112:Core/Src/main.c ****   {
 578              		.loc 1 112 9 discriminator 1 view .LVU155
 579 0016 FEE7     		b	.L38
 580              		.cfi_endproc
 581              	.LFE67:
 583              		.global	huart1
 584              		.global	htim3
 585              		.section	.bss.htim3,"aw",%nobits
 586              		.align	2
 587              		.set	.LANCHOR0,. + 0
 590              	htim3:
 591 0000 00000000 		.space	72
 591      00000000 
 591      00000000 
 591      00000000 
 591      00000000 
 592              		.section	.bss.huart1,"aw",%nobits
 593              		.align	2
 594              		.set	.LANCHOR1,. + 0
 597              	huart1:
 598 0000 00000000 		.space	68
 598      00000000 
 598      00000000 
 598      00000000 
 598      00000000 
 599              		.text
 600              	.Letext0:
 601              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 602              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 603              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 604              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 605              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 606              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 607              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 608              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 609              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  /tmp/cc6eY2s1.s 			page 21


 610              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 611              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 612              		.file 14 "<built-in>"
ARM GAS  /tmp/cc6eY2s1.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6eY2s1.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc6eY2s1.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc6eY2s1.s:113    .text.MX_GPIO_Init:000000000000005c $d
     /tmp/cc6eY2s1.s:119    .text.delay_us:0000000000000000 $t
     /tmp/cc6eY2s1.s:126    .text.delay_us:0000000000000000 delay_us
     /tmp/cc6eY2s1.s:155    .text.delay_us:0000000000000018 $d
     /tmp/cc6eY2s1.s:160    .text.delay_ms:0000000000000000 $t
     /tmp/cc6eY2s1.s:167    .text.delay_ms:0000000000000000 delay_ms
     /tmp/cc6eY2s1.s:216    .text.Error_Handler:0000000000000000 $t
     /tmp/cc6eY2s1.s:223    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc6eY2s1.s:255    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/cc6eY2s1.s:261    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/cc6eY2s1.s:363    .text.MX_TIM3_Init:0000000000000060 $d
     /tmp/cc6eY2s1.s:369    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc6eY2s1.s:375    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc6eY2s1.s:430    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/cc6eY2s1.s:436    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc6eY2s1.s:443    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc6eY2s1.s:541    .text.main:0000000000000000 $t
     /tmp/cc6eY2s1.s:548    .text.main:0000000000000000 main
     /tmp/cc6eY2s1.s:597    .bss.huart1:0000000000000000 huart1
     /tmp/cc6eY2s1.s:590    .bss.htim3:0000000000000000 htim3
     /tmp/cc6eY2s1.s:586    .bss.htim3:0000000000000000 $d
     /tmp/cc6eY2s1.s:593    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
