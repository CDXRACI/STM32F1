ARM GAS  /tmp/cceB0agr.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cceB0agr.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  43:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  55:Core/Src/main.c **** static void MX_TIM3_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** void delay_us(uint64_t count)
  58:Core/Src/main.c **** {
  59:Core/Src/main.c ****  __HAL_TIM_SetCounter(&htim3, 0);
  60:Core/Src/main.c ****  while (__HAL_TIM_GetCounter(&htim3) < count);
  61:Core/Src/main.c **** }
  62:Core/Src/main.c **** void delay_ms(uint16_t time)
  63:Core/Src/main.c **** {
  64:Core/Src/main.c ****  uint16_t i = 0;
  65:Core/Src/main.c ****  for(i = 0; i < time; i++)
  66:Core/Src/main.c ****  {
  67:Core/Src/main.c ****    delay_us(1000);
  68:Core/Src/main.c ****  }
  69:Core/Src/main.c **** }
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/cceB0agr.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   // MX_TIM2_Init();
 106:Core/Src/main.c ****   MX_USART1_UART_Init();
 107:Core/Src/main.c ****   MX_TIM3_Init();
 108:Core/Src/main.c ****    HAL_TIM_Base_Start_IT(&htim3);
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim2);
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c ****   while (1)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     /* USER CODE END WHILE */
 118:Core/Src/main.c ****    HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 119:Core/Src/main.c ****    delay_ms(1000);
 120:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 121:Core/Src/main.c ****   }
 122:Core/Src/main.c ****   /* USER CODE END 3 */
 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** void SystemClock_Config(void)
 128:Core/Src/main.c **** {
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/cceB0agr.s 			page 4


 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /**
 163:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 164:Core/Src/main.c ****   * @param None
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /**
 170:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 171:Core/Src/main.c ****   * @param None
 172:Core/Src/main.c ****   * @retval None
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c **** static void MX_TIM3_Init(void)
 175:Core/Src/main.c **** {
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 182:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 187:Core/Src/main.c ****   htim3.Instance = TIM3;
 188:Core/Src/main.c ****   htim3.Init.Prescaler = 72-1;
 189:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 190:Core/Src/main.c ****   htim3.Init.Period = 9990;
 191:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 192:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 193:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 201:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
ARM GAS  /tmp/cceB0agr.s 			page 5


 205:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 206:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 207:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief USART1 Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 223:Core/Src/main.c **** {
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 232:Core/Src/main.c ****   huart1.Instance = USART1;
 233:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 234:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 235:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 236:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 237:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 238:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 239:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 240:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief GPIO Initialization Function
 252:Core/Src/main.c ****   * @param None
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** static void MX_GPIO_Init(void)
 256:Core/Src/main.c **** {
  26              		.loc 1 256 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cceB0agr.s 			page 6


  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 257:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 257 3 view .LVU1
  40              		.loc 1 257 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 260:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 260 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 260 3 view .LVU4
  49              		.loc 1 260 3 view .LVU5
  50 000e 134B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 260 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 260 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 260 3 view .LVU8
 261:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 261 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 261 3 view .LVU10
  65              		.loc 1 261 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 261 3 view .LVU12
  70 002a 9B69     		ldr	r3, [r3, #24]
  71 002c 03F00403 		and	r3, r3, #4
  72 0030 0193     		str	r3, [sp, #4]
  73              		.loc 1 261 3 view .LVU13
  74 0032 019B     		ldr	r3, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 261 3 view .LVU14
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 264:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
  77              		.loc 1 264 3 view .LVU15
  78 0034 0A4D     		ldr	r5, .L3+4
  79 0036 2246     		mov	r2, r4
ARM GAS  /tmp/cceB0agr.s 			page 7


  80 0038 6021     		movs	r1, #96
  81 003a 2846     		mov	r0, r5
  82 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /*Configure GPIO pins : PA5 PA6 */
 267:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
  84              		.loc 1 267 3 view .LVU16
  85              		.loc 1 267 23 is_stmt 0 view .LVU17
  86 0040 6023     		movs	r3, #96
  87 0042 0293     		str	r3, [sp, #8]
 268:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 268 3 is_stmt 1 view .LVU18
  89              		.loc 1 268 24 is_stmt 0 view .LVU19
  90 0044 0123     		movs	r3, #1
  91 0046 0393     		str	r3, [sp, #12]
 269:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 269 3 is_stmt 1 view .LVU20
  93              		.loc 1 269 24 is_stmt 0 view .LVU21
  94 0048 0494     		str	r4, [sp, #16]
 270:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 270 3 is_stmt 1 view .LVU22
  96              		.loc 1 270 25 is_stmt 0 view .LVU23
  97 004a 0223     		movs	r3, #2
  98 004c 0593     		str	r3, [sp, #20]
 271:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  99              		.loc 1 271 3 is_stmt 1 view .LVU24
 100 004e 02A9     		add	r1, sp, #8
 101 0050 2846     		mov	r0, r5
 102 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** }
 104              		.loc 1 273 1 is_stmt 0 view .LVU25
 105 0056 07B0     		add	sp, sp, #28
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 12
 108              		@ sp needed
 109 0058 30BD     		pop	{r4, r5, pc}
 110              	.L4:
 111 005a 00BF     		.align	2
 112              	.L3:
 113 005c 00100240 		.word	1073876992
 114 0060 00080140 		.word	1073809408
 115              		.cfi_endproc
 116              	.LFE71:
 118              		.section	.text.delay_us,"ax",%progbits
 119              		.align	1
 120              		.global	delay_us
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 126              	delay_us:
 127              	.LVL2:
 128              	.LFB65:
  58:Core/Src/main.c ****  __HAL_TIM_SetCounter(&htim3, 0);
ARM GAS  /tmp/cceB0agr.s 			page 8


 129              		.loc 1 58 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
  59:Core/Src/main.c ****  while (__HAL_TIM_GetCounter(&htim3) < count);
 134              		.loc 1 59 2 view .LVU27
 135 0000 054B     		ldr	r3, .L7
 136 0002 1A68     		ldr	r2, [r3]
 137 0004 0023     		movs	r3, #0
 138 0006 5362     		str	r3, [r2, #36]
  60:Core/Src/main.c **** }
 139              		.loc 1 60 2 view .LVU28
 140              	.L6:
  60:Core/Src/main.c **** }
 141              		.loc 1 60 46 discriminator 1 view .LVU29
  60:Core/Src/main.c **** }
 142              		.loc 1 60 8 discriminator 1 view .LVU30
  60:Core/Src/main.c **** }
 143              		.loc 1 60 9 is_stmt 0 discriminator 1 view .LVU31
 144 0008 536A     		ldr	r3, [r2, #36]
  60:Core/Src/main.c **** }
 145              		.loc 1 60 8 discriminator 1 view .LVU32
 146 000a 8342     		cmp	r3, r0
 147 000c 4FF00003 		mov	r3, #0
 148 0010 8B41     		sbcs	r3, r3, r1
 149 0012 F9D3     		bcc	.L6
  61:Core/Src/main.c **** void delay_ms(uint16_t time)
 150              		.loc 1 61 1 view .LVU33
 151 0014 7047     		bx	lr
 152              	.L8:
 153 0016 00BF     		.align	2
 154              	.L7:
 155 0018 00000000 		.word	.LANCHOR0
 156              		.cfi_endproc
 157              	.LFE65:
 159              		.section	.text.delay_ms,"ax",%progbits
 160              		.align	1
 161              		.global	delay_ms
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	delay_ms:
 168              	.LVL3:
 169              	.LFB66:
  63:Core/Src/main.c ****  uint16_t i = 0;
 170              		.loc 1 63 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
  63:Core/Src/main.c ****  uint16_t i = 0;
 174              		.loc 1 63 1 is_stmt 0 view .LVU35
 175 0000 38B5     		push	{r3, r4, r5, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 3, -16
ARM GAS  /tmp/cceB0agr.s 			page 9


 179              		.cfi_offset 4, -12
 180              		.cfi_offset 5, -8
 181              		.cfi_offset 14, -4
 182 0002 0546     		mov	r5, r0
  64:Core/Src/main.c ****  for(i = 0; i < time; i++)
 183              		.loc 1 64 2 is_stmt 1 view .LVU36
 184              	.LVL4:
  65:Core/Src/main.c ****  {
 185              		.loc 1 65 2 view .LVU37
  65:Core/Src/main.c ****  {
 186              		.loc 1 65 8 is_stmt 0 view .LVU38
 187 0004 0024     		movs	r4, #0
  65:Core/Src/main.c ****  {
 188              		.loc 1 65 2 view .LVU39
 189 0006 06E0     		b	.L10
 190              	.LVL5:
 191              	.L11:
  67:Core/Src/main.c ****  }
 192              		.loc 1 67 4 is_stmt 1 discriminator 3 view .LVU40
 193 0008 4FF47A70 		mov	r0, #1000
 194 000c 0021     		movs	r1, #0
 195 000e FFF7FEFF 		bl	delay_us
 196              	.LVL6:
  65:Core/Src/main.c ****  {
 197              		.loc 1 65 23 discriminator 3 view .LVU41
  65:Core/Src/main.c ****  {
 198              		.loc 1 65 24 is_stmt 0 discriminator 3 view .LVU42
 199 0012 0134     		adds	r4, r4, #1
 200              	.LVL7:
  65:Core/Src/main.c ****  {
 201              		.loc 1 65 24 discriminator 3 view .LVU43
 202 0014 A4B2     		uxth	r4, r4
 203              	.LVL8:
 204              	.L10:
  65:Core/Src/main.c ****  {
 205              		.loc 1 65 13 is_stmt 1 discriminator 1 view .LVU44
  65:Core/Src/main.c ****  {
 206              		.loc 1 65 2 is_stmt 0 discriminator 1 view .LVU45
 207 0016 AC42     		cmp	r4, r5
 208 0018 F6D3     		bcc	.L11
  69:Core/Src/main.c **** /* USER CODE END PFP */
 209              		.loc 1 69 1 view .LVU46
 210 001a 38BD     		pop	{r3, r4, r5, pc}
  69:Core/Src/main.c **** /* USER CODE END PFP */
 211              		.loc 1 69 1 view .LVU47
 212              		.cfi_endproc
 213              	.LFE66:
 215              		.section	.text.Error_Handler,"ax",%progbits
 216              		.align	1
 217              		.global	Error_Handler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	Error_Handler:
 224              	.LFB72:
 274:Core/Src/main.c **** 
ARM GAS  /tmp/cceB0agr.s 			page 10


 275:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** /* USER CODE END 4 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** void Error_Handler(void)
 284:Core/Src/main.c **** {
 225              		.loc 1 284 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ Volatile: function does not return.
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 285:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 286:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 287:Core/Src/main.c ****   __disable_irq();
 231              		.loc 1 287 3 view .LVU49
 232              	.LBB6:
 233              	.LBI6:
 234              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  /tmp/cceB0agr.s 			page 11


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cceB0agr.s 			page 12


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 235              		.loc 2 140 27 view .LVU50
 236              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 237              		.loc 2 142 3 view .LVU51
 238              		.syntax unified
 239              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 240 0000 72B6     		cpsid i
ARM GAS  /tmp/cceB0agr.s 			page 13


 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244              	.L14:
 245              	.LBE7:
 246              	.LBE6:
 288:Core/Src/main.c ****   while (1)
 247              		.loc 1 288 3 discriminator 1 view .LVU52
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****   }
 248              		.loc 1 290 3 discriminator 1 view .LVU53
 288:Core/Src/main.c ****   while (1)
 249              		.loc 1 288 9 discriminator 1 view .LVU54
 250 0002 FEE7     		b	.L14
 251              		.cfi_endproc
 252              	.LFE72:
 254              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 255              		.align	1
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	MX_USART1_UART_Init:
 262              	.LFB70:
 223:Core/Src/main.c **** 
 263              		.loc 1 223 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
 232:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 272              		.loc 1 232 3 view .LVU56
 232:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 273              		.loc 1 232 19 is_stmt 0 view .LVU57
 274 0002 0A48     		ldr	r0, .L19
 275 0004 0A4B     		ldr	r3, .L19+4
 276 0006 0360     		str	r3, [r0]
 233:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 277              		.loc 1 233 3 is_stmt 1 view .LVU58
 233:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 278              		.loc 1 233 24 is_stmt 0 view .LVU59
 279 0008 4FF4E133 		mov	r3, #115200
 280 000c 4360     		str	r3, [r0, #4]
 234:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 281              		.loc 1 234 3 is_stmt 1 view .LVU60
 234:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 282              		.loc 1 234 26 is_stmt 0 view .LVU61
 283 000e 0023     		movs	r3, #0
 284 0010 8360     		str	r3, [r0, #8]
 235:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 285              		.loc 1 235 3 is_stmt 1 view .LVU62
 235:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 286              		.loc 1 235 24 is_stmt 0 view .LVU63
ARM GAS  /tmp/cceB0agr.s 			page 14


 287 0012 C360     		str	r3, [r0, #12]
 236:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 288              		.loc 1 236 3 is_stmt 1 view .LVU64
 236:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 289              		.loc 1 236 22 is_stmt 0 view .LVU65
 290 0014 0361     		str	r3, [r0, #16]
 237:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 291              		.loc 1 237 3 is_stmt 1 view .LVU66
 237:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 292              		.loc 1 237 20 is_stmt 0 view .LVU67
 293 0016 0C22     		movs	r2, #12
 294 0018 4261     		str	r2, [r0, #20]
 238:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 295              		.loc 1 238 3 is_stmt 1 view .LVU68
 238:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 296              		.loc 1 238 25 is_stmt 0 view .LVU69
 297 001a 8361     		str	r3, [r0, #24]
 239:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 298              		.loc 1 239 3 is_stmt 1 view .LVU70
 239:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 299              		.loc 1 239 28 is_stmt 0 view .LVU71
 300 001c C361     		str	r3, [r0, #28]
 240:Core/Src/main.c ****   {
 301              		.loc 1 240 3 is_stmt 1 view .LVU72
 240:Core/Src/main.c ****   {
 302              		.loc 1 240 7 is_stmt 0 view .LVU73
 303 001e FFF7FEFF 		bl	HAL_UART_Init
 304              	.LVL9:
 240:Core/Src/main.c ****   {
 305              		.loc 1 240 6 view .LVU74
 306 0022 00B9     		cbnz	r0, .L18
 248:Core/Src/main.c **** 
 307              		.loc 1 248 1 view .LVU75
 308 0024 08BD     		pop	{r3, pc}
 309              	.L18:
 242:Core/Src/main.c ****   }
 310              		.loc 1 242 5 is_stmt 1 view .LVU76
 311 0026 FFF7FEFF 		bl	Error_Handler
 312              	.LVL10:
 313              	.L20:
 314 002a 00BF     		.align	2
 315              	.L19:
 316 002c 00000000 		.word	.LANCHOR1
 317 0030 00380140 		.word	1073821696
 318              		.cfi_endproc
 319              	.LFE70:
 321              		.section	.text.MX_TIM3_Init,"ax",%progbits
 322              		.align	1
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu softvfp
 328              	MX_TIM3_Init:
 329              	.LFB69:
 175:Core/Src/main.c **** 
 330              		.loc 1 175 1 view -0
 331              		.cfi_startproc
ARM GAS  /tmp/cceB0agr.s 			page 15


 332              		@ args = 0, pretend = 0, frame = 24
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 00B5     		push	{lr}
 335              	.LCFI5:
 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 14, -4
 338 0002 87B0     		sub	sp, sp, #28
 339              	.LCFI6:
 340              		.cfi_def_cfa_offset 32
 181:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 341              		.loc 1 181 3 view .LVU78
 181:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 342              		.loc 1 181 26 is_stmt 0 view .LVU79
 343 0004 0023     		movs	r3, #0
 344 0006 0293     		str	r3, [sp, #8]
 345 0008 0393     		str	r3, [sp, #12]
 346 000a 0493     		str	r3, [sp, #16]
 347 000c 0593     		str	r3, [sp, #20]
 182:Core/Src/main.c **** 
 348              		.loc 1 182 3 is_stmt 1 view .LVU80
 182:Core/Src/main.c **** 
 349              		.loc 1 182 27 is_stmt 0 view .LVU81
 350 000e 0093     		str	r3, [sp]
 351 0010 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c ****   htim3.Init.Prescaler = 72-1;
 352              		.loc 1 187 3 is_stmt 1 view .LVU82
 187:Core/Src/main.c ****   htim3.Init.Prescaler = 72-1;
 353              		.loc 1 187 18 is_stmt 0 view .LVU83
 354 0012 1348     		ldr	r0, .L29
 355 0014 134A     		ldr	r2, .L29+4
 356 0016 0260     		str	r2, [r0]
 188:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 357              		.loc 1 188 3 is_stmt 1 view .LVU84
 188:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 358              		.loc 1 188 24 is_stmt 0 view .LVU85
 359 0018 4722     		movs	r2, #71
 360 001a 4260     		str	r2, [r0, #4]
 189:Core/Src/main.c ****   htim3.Init.Period = 9990;
 361              		.loc 1 189 3 is_stmt 1 view .LVU86
 189:Core/Src/main.c ****   htim3.Init.Period = 9990;
 362              		.loc 1 189 26 is_stmt 0 view .LVU87
 363 001c 8360     		str	r3, [r0, #8]
 190:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 364              		.loc 1 190 3 is_stmt 1 view .LVU88
 190:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 365              		.loc 1 190 21 is_stmt 0 view .LVU89
 366 001e 42F20672 		movw	r2, #9990
 367 0022 C260     		str	r2, [r0, #12]
 191:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 368              		.loc 1 191 3 is_stmt 1 view .LVU90
 191:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 369              		.loc 1 191 28 is_stmt 0 view .LVU91
 370 0024 0361     		str	r3, [r0, #16]
 192:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 371              		.loc 1 192 3 is_stmt 1 view .LVU92
 192:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 372              		.loc 1 192 32 is_stmt 0 view .LVU93
ARM GAS  /tmp/cceB0agr.s 			page 16


 373 0026 8361     		str	r3, [r0, #24]
 193:Core/Src/main.c ****   {
 374              		.loc 1 193 3 is_stmt 1 view .LVU94
 193:Core/Src/main.c ****   {
 375              		.loc 1 193 7 is_stmt 0 view .LVU95
 376 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 377              	.LVL11:
 193:Core/Src/main.c ****   {
 378              		.loc 1 193 6 view .LVU96
 379 002c 90B9     		cbnz	r0, .L26
 200:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 380              		.loc 1 200 3 is_stmt 1 view .LVU97
 200:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 381              		.loc 1 200 34 is_stmt 0 view .LVU98
 382 002e 4FF48053 		mov	r3, #4096
 383 0032 0293     		str	r3, [sp, #8]
 201:Core/Src/main.c ****   {
 384              		.loc 1 201 3 is_stmt 1 view .LVU99
 201:Core/Src/main.c ****   {
 385              		.loc 1 201 7 is_stmt 0 view .LVU100
 386 0034 02A9     		add	r1, sp, #8
 387 0036 0A48     		ldr	r0, .L29
 388 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 389              	.LVL12:
 201:Core/Src/main.c ****   {
 390              		.loc 1 201 6 view .LVU101
 391 003c 60B9     		cbnz	r0, .L27
 205:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 392              		.loc 1 205 3 is_stmt 1 view .LVU102
 205:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 393              		.loc 1 205 37 is_stmt 0 view .LVU103
 394 003e 0023     		movs	r3, #0
 395 0040 0093     		str	r3, [sp]
 206:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 396              		.loc 1 206 3 is_stmt 1 view .LVU104
 206:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 397              		.loc 1 206 33 is_stmt 0 view .LVU105
 398 0042 0193     		str	r3, [sp, #4]
 207:Core/Src/main.c ****   {
 399              		.loc 1 207 3 is_stmt 1 view .LVU106
 207:Core/Src/main.c ****   {
 400              		.loc 1 207 7 is_stmt 0 view .LVU107
 401 0044 6946     		mov	r1, sp
 402 0046 0648     		ldr	r0, .L29
 403 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 404              	.LVL13:
 207:Core/Src/main.c ****   {
 405              		.loc 1 207 6 view .LVU108
 406 004c 30B9     		cbnz	r0, .L28
 215:Core/Src/main.c **** 
 407              		.loc 1 215 1 view .LVU109
 408 004e 07B0     		add	sp, sp, #28
 409              	.LCFI7:
 410              		.cfi_remember_state
 411              		.cfi_def_cfa_offset 4
 412              		@ sp needed
 413 0050 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/cceB0agr.s 			page 17


 414              	.L26:
 415              	.LCFI8:
 416              		.cfi_restore_state
 195:Core/Src/main.c ****   }
 417              		.loc 1 195 5 is_stmt 1 view .LVU110
 418 0054 FFF7FEFF 		bl	Error_Handler
 419              	.LVL14:
 420              	.L27:
 203:Core/Src/main.c ****   }
 421              		.loc 1 203 5 view .LVU111
 422 0058 FFF7FEFF 		bl	Error_Handler
 423              	.LVL15:
 424              	.L28:
 209:Core/Src/main.c ****   }
 425              		.loc 1 209 5 view .LVU112
 426 005c FFF7FEFF 		bl	Error_Handler
 427              	.LVL16:
 428              	.L30:
 429              		.align	2
 430              	.L29:
 431 0060 00000000 		.word	.LANCHOR0
 432 0064 00040040 		.word	1073742848
 433              		.cfi_endproc
 434              	.LFE69:
 436              		.section	.text.SystemClock_Config,"ax",%progbits
 437              		.align	1
 438              		.global	SystemClock_Config
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu softvfp
 444              	SystemClock_Config:
 445              	.LFB68:
 128:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 446              		.loc 1 128 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 64
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450 0000 00B5     		push	{lr}
 451              	.LCFI9:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 14, -4
 454 0002 91B0     		sub	sp, sp, #68
 455              	.LCFI10:
 456              		.cfi_def_cfa_offset 72
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 457              		.loc 1 129 3 view .LVU114
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 458              		.loc 1 129 22 is_stmt 0 view .LVU115
 459 0004 2822     		movs	r2, #40
 460 0006 0021     		movs	r1, #0
 461 0008 06A8     		add	r0, sp, #24
 462 000a FFF7FEFF 		bl	memset
 463              	.LVL17:
 130:Core/Src/main.c **** 
 464              		.loc 1 130 3 is_stmt 1 view .LVU116
 130:Core/Src/main.c **** 
ARM GAS  /tmp/cceB0agr.s 			page 18


 465              		.loc 1 130 22 is_stmt 0 view .LVU117
 466 000e 0023     		movs	r3, #0
 467 0010 0193     		str	r3, [sp, #4]
 468 0012 0293     		str	r3, [sp, #8]
 469 0014 0393     		str	r3, [sp, #12]
 470 0016 0493     		str	r3, [sp, #16]
 471 0018 0593     		str	r3, [sp, #20]
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 472              		.loc 1 135 3 is_stmt 1 view .LVU118
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 473              		.loc 1 135 36 is_stmt 0 view .LVU119
 474 001a 0122     		movs	r2, #1
 475 001c 0692     		str	r2, [sp, #24]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 476              		.loc 1 136 3 is_stmt 1 view .LVU120
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 477              		.loc 1 136 30 is_stmt 0 view .LVU121
 478 001e 4FF48033 		mov	r3, #65536
 479 0022 0793     		str	r3, [sp, #28]
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 480              		.loc 1 137 3 is_stmt 1 view .LVU122
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 481              		.loc 1 138 3 view .LVU123
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 482              		.loc 1 138 30 is_stmt 0 view .LVU124
 483 0024 0A92     		str	r2, [sp, #40]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 484              		.loc 1 139 3 is_stmt 1 view .LVU125
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 485              		.loc 1 139 34 is_stmt 0 view .LVU126
 486 0026 0222     		movs	r2, #2
 487 0028 0D92     		str	r2, [sp, #52]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 488              		.loc 1 140 3 is_stmt 1 view .LVU127
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 489              		.loc 1 140 35 is_stmt 0 view .LVU128
 490 002a 0E93     		str	r3, [sp, #56]
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 491              		.loc 1 141 3 is_stmt 1 view .LVU129
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 492              		.loc 1 141 32 is_stmt 0 view .LVU130
 493 002c 4FF4E013 		mov	r3, #1835008
 494 0030 0F93     		str	r3, [sp, #60]
 142:Core/Src/main.c ****   {
 495              		.loc 1 142 3 is_stmt 1 view .LVU131
 142:Core/Src/main.c ****   {
 496              		.loc 1 142 7 is_stmt 0 view .LVU132
 497 0032 06A8     		add	r0, sp, #24
 498 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 499              	.LVL18:
 142:Core/Src/main.c ****   {
 500              		.loc 1 142 6 view .LVU133
 501 0038 80B9     		cbnz	r0, .L35
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 502              		.loc 1 149 3 is_stmt 1 view .LVU134
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 503              		.loc 1 149 31 is_stmt 0 view .LVU135
ARM GAS  /tmp/cceB0agr.s 			page 19


 504 003a 0F23     		movs	r3, #15
 505 003c 0193     		str	r3, [sp, #4]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 506              		.loc 1 151 3 is_stmt 1 view .LVU136
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 507              		.loc 1 151 34 is_stmt 0 view .LVU137
 508 003e 0221     		movs	r1, #2
 509 0040 0291     		str	r1, [sp, #8]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 510              		.loc 1 152 3 is_stmt 1 view .LVU138
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 511              		.loc 1 152 35 is_stmt 0 view .LVU139
 512 0042 0023     		movs	r3, #0
 513 0044 0393     		str	r3, [sp, #12]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 514              		.loc 1 153 3 is_stmt 1 view .LVU140
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 515              		.loc 1 153 36 is_stmt 0 view .LVU141
 516 0046 4FF48062 		mov	r2, #1024
 517 004a 0492     		str	r2, [sp, #16]
 154:Core/Src/main.c **** 
 518              		.loc 1 154 3 is_stmt 1 view .LVU142
 154:Core/Src/main.c **** 
 519              		.loc 1 154 36 is_stmt 0 view .LVU143
 520 004c 0593     		str	r3, [sp, #20]
 156:Core/Src/main.c ****   {
 521              		.loc 1 156 3 is_stmt 1 view .LVU144
 156:Core/Src/main.c ****   {
 522              		.loc 1 156 7 is_stmt 0 view .LVU145
 523 004e 01A8     		add	r0, sp, #4
 524 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 525              	.LVL19:
 156:Core/Src/main.c ****   {
 526              		.loc 1 156 6 view .LVU146
 527 0054 20B9     		cbnz	r0, .L36
 160:Core/Src/main.c **** 
 528              		.loc 1 160 1 view .LVU147
 529 0056 11B0     		add	sp, sp, #68
 530              	.LCFI11:
 531              		.cfi_remember_state
 532              		.cfi_def_cfa_offset 4
 533              		@ sp needed
 534 0058 5DF804FB 		ldr	pc, [sp], #4
 535              	.L35:
 536              	.LCFI12:
 537              		.cfi_restore_state
 144:Core/Src/main.c ****   }
 538              		.loc 1 144 5 is_stmt 1 view .LVU148
 539 005c FFF7FEFF 		bl	Error_Handler
 540              	.LVL20:
 541              	.L36:
 158:Core/Src/main.c ****   }
 542              		.loc 1 158 5 view .LVU149
 543 0060 FFF7FEFF 		bl	Error_Handler
 544              	.LVL21:
 545              		.cfi_endproc
 546              	.LFE68:
ARM GAS  /tmp/cceB0agr.s 			page 20


 548              		.section	.text.main,"ax",%progbits
 549              		.align	1
 550              		.global	main
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	main:
 557              	.LFB67:
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 558              		.loc 1 82 1 view -0
 559              		.cfi_startproc
 560              		@ Volatile: function does not return.
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563 0000 08B5     		push	{r3, lr}
 564              	.LCFI13:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 568              		.loc 1 90 3 view .LVU151
 569 0002 FFF7FEFF 		bl	HAL_Init
 570              	.LVL22:
  97:Core/Src/main.c **** 
 571              		.loc 1 97 3 view .LVU152
 572 0006 FFF7FEFF 		bl	SystemClock_Config
 573              	.LVL23:
 104:Core/Src/main.c ****   // MX_TIM2_Init();
 574              		.loc 1 104 3 view .LVU153
 575 000a FFF7FEFF 		bl	MX_GPIO_Init
 576              	.LVL24:
 106:Core/Src/main.c ****   MX_TIM3_Init();
 577              		.loc 1 106 3 view .LVU154
 578 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 579              	.LVL25:
 107:Core/Src/main.c ****    HAL_TIM_Base_Start_IT(&htim3);
 580              		.loc 1 107 3 view .LVU155
 581 0012 FFF7FEFF 		bl	MX_TIM3_Init
 582              	.LVL26:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 583              		.loc 1 108 4 view .LVU156
 584 0016 0648     		ldr	r0, .L40
 585 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 586              	.LVL27:
 587              	.L38:
 115:Core/Src/main.c ****   {
 588              		.loc 1 115 3 discriminator 1 view .LVU157
 118:Core/Src/main.c ****    delay_ms(1000);
 589              		.loc 1 118 4 discriminator 1 view .LVU158
 590 001c 2021     		movs	r1, #32
 591 001e 0548     		ldr	r0, .L40+4
 592 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 593              	.LVL28:
 119:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 594              		.loc 1 119 4 discriminator 1 view .LVU159
 595 0024 4FF47A70 		mov	r0, #1000
ARM GAS  /tmp/cceB0agr.s 			page 21


 596 0028 FFF7FEFF 		bl	delay_ms
 597              	.LVL29:
 115:Core/Src/main.c ****   {
 598              		.loc 1 115 9 discriminator 1 view .LVU160
 599 002c F6E7     		b	.L38
 600              	.L41:
 601 002e 00BF     		.align	2
 602              	.L40:
 603 0030 00000000 		.word	.LANCHOR0
 604 0034 00080140 		.word	1073809408
 605              		.cfi_endproc
 606              	.LFE67:
 608              		.global	huart1
 609              		.global	htim3
 610              		.global	htim2
 611              		.section	.bss.htim2,"aw",%nobits
 612              		.align	2
 615              	htim2:
 616 0000 00000000 		.space	72
 616      00000000 
 616      00000000 
 616      00000000 
 616      00000000 
 617              		.section	.bss.htim3,"aw",%nobits
 618              		.align	2
 619              		.set	.LANCHOR0,. + 0
 622              	htim3:
 623 0000 00000000 		.space	72
 623      00000000 
 623      00000000 
 623      00000000 
 623      00000000 
 624              		.section	.bss.huart1,"aw",%nobits
 625              		.align	2
 626              		.set	.LANCHOR1,. + 0
 629              	huart1:
 630 0000 00000000 		.space	68
 630      00000000 
 630      00000000 
 630      00000000 
 630      00000000 
 631              		.text
 632              	.Letext0:
 633              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 634              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 635              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 636              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 637              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 638              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 639              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 640              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 641              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 642              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 643              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 644              		.file 14 "<built-in>"
ARM GAS  /tmp/cceB0agr.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cceB0agr.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cceB0agr.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cceB0agr.s:113    .text.MX_GPIO_Init:000000000000005c $d
     /tmp/cceB0agr.s:119    .text.delay_us:0000000000000000 $t
     /tmp/cceB0agr.s:126    .text.delay_us:0000000000000000 delay_us
     /tmp/cceB0agr.s:155    .text.delay_us:0000000000000018 $d
     /tmp/cceB0agr.s:160    .text.delay_ms:0000000000000000 $t
     /tmp/cceB0agr.s:167    .text.delay_ms:0000000000000000 delay_ms
     /tmp/cceB0agr.s:216    .text.Error_Handler:0000000000000000 $t
     /tmp/cceB0agr.s:223    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cceB0agr.s:255    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cceB0agr.s:261    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cceB0agr.s:316    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/cceB0agr.s:322    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/cceB0agr.s:328    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/cceB0agr.s:431    .text.MX_TIM3_Init:0000000000000060 $d
     /tmp/cceB0agr.s:437    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cceB0agr.s:444    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cceB0agr.s:549    .text.main:0000000000000000 $t
     /tmp/cceB0agr.s:556    .text.main:0000000000000000 main
     /tmp/cceB0agr.s:603    .text.main:0000000000000030 $d
     /tmp/cceB0agr.s:629    .bss.huart1:0000000000000000 huart1
     /tmp/cceB0agr.s:622    .bss.htim3:0000000000000000 htim3
     /tmp/cceB0agr.s:615    .bss.htim2:0000000000000000 htim2
     /tmp/cceB0agr.s:612    .bss.htim2:0000000000000000 $d
     /tmp/cceB0agr.s:618    .bss.htim3:0000000000000000 $d
     /tmp/cceB0agr.s:625    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
