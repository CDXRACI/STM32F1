ARM GAS  /tmp/cc1JcXpx.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB70:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include <assert.h>
   3:Core/Src/main.c **** #include <stdbool.h>
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** 
   6:Core/Src/main.c **** void SystemClock_Config(void);
   7:Core/Src/main.c **** static void MX_GPIO_Init(void);
   8:Core/Src/main.c **** 
   9:Core/Src/main.c **** #define GPIOA_ST                  (( volatile )(( unsigned int *)0x40010800 ))
  10:Core/Src/main.c **** #define GPIOB_ST                  (( volatile )(( unsigned int *)0x40010C00 ))
  11:Core/Src/main.c **** #define GPIOC_ST                  (( volatile )(( unsigned int *)0x40011000 ))
  12:Core/Src/main.c **** #define GPIOD_ST                  (( volatile )(( unsigned int *)0x40011400 ))
  13:Core/Src/main.c **** #define GPIOE_ST                  (( volatile )(( unsigned int *)0x40011800 ))
  14:Core/Src/main.c ****  
  15:Core/Src/main.c ****                                    //0b0000.0000.0000.0000
  16:Core/Src/main.c **** #define GPIOX_PIN_0                (unsigned int )0x0001
  17:Core/Src/main.c **** #define GPIOX_PIN_1                (unsigned int )0x0002
  18:Core/Src/main.c **** #define GPIOX_PIN_2                (unsigned int )0x0004
  19:Core/Src/main.c **** #define GPIOX_PIN_3                (unsigned int )0x0008
  20:Core/Src/main.c **** #define GPIOX_PIN_4                (unsigned int )0x0010
  21:Core/Src/main.c **** #define GPIOX_PIN_5                (unsigned int )0x0020                    //  0b0000000000100000
  22:Core/Src/main.c **** #define GPIOX_PIN_6                (unsigned int )0x0040
  23:Core/Src/main.c **** #define GPIOX_PIN_7                (unsigned int )0x0080
  24:Core/Src/main.c **** #define GPIOX_PIN_8                (unsigned int )0x0100
  25:Core/Src/main.c **** #define GPIOX_PIN_9                (unsigned int )0x0200
  26:Core/Src/main.c **** #define GPIOX_PIN_10               (unsigned int )0x0400
  27:Core/Src/main.c **** #define GPIOX_PIN_11               (unsigned int )0x0800
  28:Core/Src/main.c **** #define GPIOX_PIN_12               (unsigned int )0x1000
  29:Core/Src/main.c **** #define GPIOX_PIN_13               (unsigned int )0x2000
  30:Core/Src/main.c **** #define GPIOX_PIN_14               (unsigned int )0x4000
  31:Core/Src/main.c **** #define GPIOX_PIN_15               (unsigned int )0x8000
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** typedef enum Valx{
ARM GAS  /tmp/cc1JcXpx.s 			page 2


  34:Core/Src/main.c **** 	LOGIC_LOW_STATE 	= 0,
  35:Core/Src/main.c **** 	LOGIC_HIGH_STATE	   ,
  36:Core/Src/main.c **** 	LOGIC_UNK_STATE	     ,
  37:Core/Src/main.c **** }Valx_t;
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** typedef enum boolVal{
  40:Core/Src/main.c ****     BOOLVAL_SE      = 0,
  41:Core/Src/main.c ****     BOOLVAL_HG         ,
  42:Core/Src/main.c ****     BOOLVAL_SX         ,
  43:Core/Src/main.c **** }boolVal_t;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** bool led_writepin(unsigned int GPIOx, unsigned int Pinx){
  46:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
  47:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_HIGH_STATE);    
  48:Core/Src/main.c ****     return true;
  49:Core/Src/main.c **** }
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** bool led_erasepin(unsigned int GPIOx, unsigned int Pinx){
  52:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
  53:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_LOW_STATE);    
  54:Core/Src/main.c ****     return true;
  55:Core/Src/main.c **** }
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** bool led_blinkpin(unsigned int GPIOx, unsigned int Pinx){
  58:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
  59:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOx,Pinx);    
  60:Core/Src/main.c ****     return true;
  61:Core/Src/main.c **** }
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** uint8_t pinState  = 0;
  64:Core/Src/main.c **** bool pinStateH = 0;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/cc1JcXpx.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Infinite loop */
  95:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.c ****   while (1)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     /* USER CODE END WHILE */
  99:Core/Src/main.c ****     if( HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_13) == false){
 100:Core/Src/main.c ****         HAL_Delay(500);
 101:Core/Src/main.c ****         pinState = ~pinState;
 102:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,pinState);
 103:Core/Src/main.c ****         // HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_5);
 104:Core/Src/main.c ****         HAL_Delay(1000);
 105:Core/Src/main.c ****       }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****   }
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   * @retval None
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** void SystemClock_Config(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 132:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 147:Core/Src/main.c ****   {
ARM GAS  /tmp/cc1JcXpx.s 			page 4


 148:Core/Src/main.c ****     Error_Handler();
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief GPIO Initialization Function
 154:Core/Src/main.c ****   * @param None
 155:Core/Src/main.c ****   * @retval None
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c **** static void MX_GPIO_Init(void)
 158:Core/Src/main.c **** {
  26              		.loc 1 158 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 159:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 159 3 view .LVU1
  41              		.loc 1 159 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0494     		str	r4, [sp, #16]
  44 0008 0594     		str	r4, [sp, #20]
  45 000a 0694     		str	r4, [sp, #24]
  46 000c 0794     		str	r4, [sp, #28]
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 162:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 162 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 162 3 view .LVU4
  50              		.loc 1 162 3 view .LVU5
  51 000e 1C4B     		ldr	r3, .L3
  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 42F01002 		orr	r2, r2, #16
  54 0016 9A61     		str	r2, [r3, #24]
  55              		.loc 1 162 3 view .LVU6
  56 0018 9A69     		ldr	r2, [r3, #24]
  57 001a 02F01002 		and	r2, r2, #16
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 162 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 162 3 view .LVU8
 163:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  63              		.loc 1 163 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 163 3 view .LVU10
  66              		.loc 1 163 3 view .LVU11
ARM GAS  /tmp/cc1JcXpx.s 			page 5


  67 0022 9A69     		ldr	r2, [r3, #24]
  68 0024 42F02002 		orr	r2, r2, #32
  69 0028 9A61     		str	r2, [r3, #24]
  70              		.loc 1 163 3 view .LVU12
  71 002a 9A69     		ldr	r2, [r3, #24]
  72 002c 02F02002 		and	r2, r2, #32
  73 0030 0292     		str	r2, [sp, #8]
  74              		.loc 1 163 3 view .LVU13
  75 0032 029A     		ldr	r2, [sp, #8]
  76              	.LBE5:
  77              		.loc 1 163 3 view .LVU14
 164:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 164 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 164 3 view .LVU16
  81              		.loc 1 164 3 view .LVU17
  82 0034 9A69     		ldr	r2, [r3, #24]
  83 0036 42F00402 		orr	r2, r2, #4
  84 003a 9A61     		str	r2, [r3, #24]
  85              		.loc 1 164 3 view .LVU18
  86 003c 9B69     		ldr	r3, [r3, #24]
  87 003e 03F00403 		and	r3, r3, #4
  88 0042 0393     		str	r3, [sp, #12]
  89              		.loc 1 164 3 view .LVU19
  90 0044 039B     		ldr	r3, [sp, #12]
  91              	.LBE6:
  92              		.loc 1 164 3 view .LVU20
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 167:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  93              		.loc 1 167 3 view .LVU21
  94 0046 0F4D     		ldr	r5, .L3+4
  95 0048 2246     		mov	r2, r4
  96 004a 2021     		movs	r1, #32
  97 004c 2846     		mov	r0, r5
  98 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL0:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 170:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 100              		.loc 1 170 3 view .LVU22
 101              		.loc 1 170 23 is_stmt 0 view .LVU23
 102 0052 4FF40053 		mov	r3, #8192
 103 0056 0493     		str	r3, [sp, #16]
 171:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 104              		.loc 1 171 3 is_stmt 1 view .LVU24
 105              		.loc 1 171 24 is_stmt 0 view .LVU25
 106 0058 0594     		str	r4, [sp, #20]
 172:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 107              		.loc 1 172 3 is_stmt 1 view .LVU26
 108              		.loc 1 172 24 is_stmt 0 view .LVU27
 109 005a 0226     		movs	r6, #2
 110 005c 0696     		str	r6, [sp, #24]
 173:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 111              		.loc 1 173 3 is_stmt 1 view .LVU28
 112 005e 04A9     		add	r1, sp, #16
 113 0060 0948     		ldr	r0, .L3+8
ARM GAS  /tmp/cc1JcXpx.s 			page 6


 114 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL1:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 176:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 116              		.loc 1 176 3 view .LVU29
 117              		.loc 1 176 23 is_stmt 0 view .LVU30
 118 0066 2023     		movs	r3, #32
 119 0068 0493     		str	r3, [sp, #16]
 177:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 120              		.loc 1 177 3 is_stmt 1 view .LVU31
 121              		.loc 1 177 24 is_stmt 0 view .LVU32
 122 006a 0123     		movs	r3, #1
 123 006c 0593     		str	r3, [sp, #20]
 178:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 178 3 is_stmt 1 view .LVU33
 125              		.loc 1 178 24 is_stmt 0 view .LVU34
 126 006e 0694     		str	r4, [sp, #24]
 179:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 127              		.loc 1 179 3 is_stmt 1 view .LVU35
 128              		.loc 1 179 25 is_stmt 0 view .LVU36
 129 0070 0796     		str	r6, [sp, #28]
 180:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 130              		.loc 1 180 3 is_stmt 1 view .LVU37
 131 0072 04A9     		add	r1, sp, #16
 132 0074 2846     		mov	r0, r5
 133 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL2:
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** }
 135              		.loc 1 182 1 is_stmt 0 view .LVU38
 136 007a 08B0     		add	sp, sp, #32
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 16
 139              		@ sp needed
 140 007c 70BD     		pop	{r4, r5, r6, pc}
 141              	.L4:
 142 007e 00BF     		.align	2
 143              	.L3:
 144 0080 00100240 		.word	1073876992
 145 0084 00080140 		.word	1073809408
 146 0088 00100140 		.word	1073811456
 147              		.cfi_endproc
 148              	.LFE70:
 150              		.section	.rodata.led_writepin.str1.4,"aMS",%progbits,1
 151              		.align	2
 152              	.LC0:
 153 0000 4750494F 		.ascii	"GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE\000"
 153      78203E20 
 153      424F4F4C 
 153      56414C5F 
 153      53452026 
 154              		.align	2
 155              	.LC1:
 156 0028 436F7265 		.ascii	"Core/Src/main.c\000"
 156      2F537263 
 156      2F6D6169 
ARM GAS  /tmp/cc1JcXpx.s 			page 7


 156      6E2E6300 
 157              		.section	.text.led_writepin,"ax",%progbits
 158              		.align	1
 159              		.global	led_writepin
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	led_writepin:
 166              	.LVL3:
 167              	.LFB65:
  45:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
 168              		.loc 1 45 57 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
  45:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
 172              		.loc 1 45 57 is_stmt 0 view .LVU40
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_HIGH_STATE);    
 178              		.loc 1 46 5 is_stmt 1 view .LVU41
 179 0002 30B1     		cbz	r0, .L6
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_HIGH_STATE);    
 180              		.loc 1 46 5 is_stmt 0 discriminator 2 view .LVU42
 181 0004 29B1     		cbz	r1, .L6
  47:Core/Src/main.c ****     return true;
 182              		.loc 1 47 5 is_stmt 1 view .LVU43
 183 0006 0122     		movs	r2, #1
 184 0008 89B2     		uxth	r1, r1
 185              	.LVL4:
  47:Core/Src/main.c ****     return true;
 186              		.loc 1 47 5 is_stmt 0 view .LVU44
 187 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL5:
  48:Core/Src/main.c **** }
 189              		.loc 1 48 5 is_stmt 1 view .LVU45
  49:Core/Src/main.c **** 
 190              		.loc 1 49 1 is_stmt 0 view .LVU46
 191 000e 0120     		movs	r0, #1
 192 0010 08BD     		pop	{r3, pc}
 193              	.LVL6:
 194              	.L6:
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_HIGH_STATE);    
 195              		.loc 1 46 5 discriminator 3 view .LVU47
 196 0012 034B     		ldr	r3, .L9
 197 0014 034A     		ldr	r2, .L9+4
 198 0016 2E21     		movs	r1, #46
 199              	.LVL7:
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_HIGH_STATE);    
 200              		.loc 1 46 5 discriminator 3 view .LVU48
 201 0018 0348     		ldr	r0, .L9+8
 202              	.LVL8:
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_HIGH_STATE);    
ARM GAS  /tmp/cc1JcXpx.s 			page 8


 203              		.loc 1 46 5 discriminator 3 view .LVU49
 204 001a FFF7FEFF 		bl	__assert_func
 205              	.LVL9:
 206              	.L10:
 207 001e 00BF     		.align	2
 208              	.L9:
 209 0020 00000000 		.word	.LC0
 210 0024 00000000 		.word	.LANCHOR0
 211 0028 28000000 		.word	.LC1
 212              		.cfi_endproc
 213              	.LFE65:
 215              		.section	.text.led_erasepin,"ax",%progbits
 216              		.align	1
 217              		.global	led_erasepin
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	led_erasepin:
 224              	.LVL10:
 225              	.LFB66:
  51:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
 226              		.loc 1 51 57 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
  51:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
 230              		.loc 1 51 57 is_stmt 0 view .LVU51
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
  52:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_LOW_STATE);    
 236              		.loc 1 52 5 is_stmt 1 view .LVU52
 237 0002 30B1     		cbz	r0, .L12
  52:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_LOW_STATE);    
 238              		.loc 1 52 5 is_stmt 0 discriminator 2 view .LVU53
 239 0004 29B1     		cbz	r1, .L12
  53:Core/Src/main.c ****     return true;
 240              		.loc 1 53 5 is_stmt 1 view .LVU54
 241 0006 0022     		movs	r2, #0
 242 0008 89B2     		uxth	r1, r1
 243              	.LVL11:
  53:Core/Src/main.c ****     return true;
 244              		.loc 1 53 5 is_stmt 0 view .LVU55
 245 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 246              	.LVL12:
  54:Core/Src/main.c **** }
 247              		.loc 1 54 5 is_stmt 1 view .LVU56
  55:Core/Src/main.c **** 
 248              		.loc 1 55 1 is_stmt 0 view .LVU57
 249 000e 0120     		movs	r0, #1
 250 0010 08BD     		pop	{r3, pc}
 251              	.LVL13:
 252              	.L12:
  52:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_LOW_STATE);    
ARM GAS  /tmp/cc1JcXpx.s 			page 9


 253              		.loc 1 52 5 discriminator 3 view .LVU58
 254 0012 034B     		ldr	r3, .L15
 255 0014 034A     		ldr	r2, .L15+4
 256 0016 3421     		movs	r1, #52
 257              	.LVL14:
  52:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_LOW_STATE);    
 258              		.loc 1 52 5 discriminator 3 view .LVU59
 259 0018 0348     		ldr	r0, .L15+8
 260              	.LVL15:
  52:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOx,Pinx,LOGIC_LOW_STATE);    
 261              		.loc 1 52 5 discriminator 3 view .LVU60
 262 001a FFF7FEFF 		bl	__assert_func
 263              	.LVL16:
 264              	.L16:
 265 001e 00BF     		.align	2
 266              	.L15:
 267 0020 00000000 		.word	.LC0
 268 0024 00000000 		.word	.LANCHOR1
 269 0028 28000000 		.word	.LC1
 270              		.cfi_endproc
 271              	.LFE66:
 273              		.section	.text.led_blinkpin,"ax",%progbits
 274              		.align	1
 275              		.global	led_blinkpin
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 281              	led_blinkpin:
 282              	.LVL17:
 283              	.LFB67:
  57:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
 284              		.loc 1 57 57 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
  57:Core/Src/main.c ****     assert(GPIOx > BOOLVAL_SE && Pinx > BOOLVAL_SE );
 288              		.loc 1 57 57 is_stmt 0 view .LVU62
 289 0000 08B5     		push	{r3, lr}
 290              	.LCFI5:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
  58:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOx,Pinx);    
 294              		.loc 1 58 5 is_stmt 1 view .LVU63
 295 0002 28B1     		cbz	r0, .L18
  58:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOx,Pinx);    
 296              		.loc 1 58 5 is_stmt 0 discriminator 2 view .LVU64
 297 0004 21B1     		cbz	r1, .L18
  59:Core/Src/main.c ****     return true;
 298              		.loc 1 59 5 is_stmt 1 view .LVU65
 299 0006 89B2     		uxth	r1, r1
 300              	.LVL18:
  59:Core/Src/main.c ****     return true;
 301              		.loc 1 59 5 is_stmt 0 view .LVU66
 302 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 303              	.LVL19:
ARM GAS  /tmp/cc1JcXpx.s 			page 10


  60:Core/Src/main.c **** }
 304              		.loc 1 60 5 is_stmt 1 view .LVU67
  61:Core/Src/main.c **** 
 305              		.loc 1 61 1 is_stmt 0 view .LVU68
 306 000c 0120     		movs	r0, #1
 307 000e 08BD     		pop	{r3, pc}
 308              	.LVL20:
 309              	.L18:
  58:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOx,Pinx);    
 310              		.loc 1 58 5 discriminator 3 view .LVU69
 311 0010 024B     		ldr	r3, .L21
 312 0012 034A     		ldr	r2, .L21+4
 313 0014 3A21     		movs	r1, #58
 314              	.LVL21:
  58:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOx,Pinx);    
 315              		.loc 1 58 5 discriminator 3 view .LVU70
 316 0016 0348     		ldr	r0, .L21+8
 317              	.LVL22:
  58:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOx,Pinx);    
 318              		.loc 1 58 5 discriminator 3 view .LVU71
 319 0018 FFF7FEFF 		bl	__assert_func
 320              	.LVL23:
 321              	.L22:
 322              		.align	2
 323              	.L21:
 324 001c 00000000 		.word	.LC0
 325 0020 00000000 		.word	.LANCHOR2
 326 0024 28000000 		.word	.LC1
 327              		.cfi_endproc
 328              	.LFE67:
 330              		.section	.text.Error_Handler,"ax",%progbits
 331              		.align	1
 332              		.global	Error_Handler
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu softvfp
 338              	Error_Handler:
 339              	.LFB71:
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE END 4 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** void Error_Handler(void)
 193:Core/Src/main.c **** {
 340              		.loc 1 193 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ Volatile: function does not return.
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 194:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/cc1JcXpx.s 			page 11


 195:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 196:Core/Src/main.c ****   __disable_irq();
 346              		.loc 1 196 3 view .LVU73
 347              	.LBB7:
 348              	.LBI7:
 349              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/cc1JcXpx.s 			page 12


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/cc1JcXpx.s 			page 13


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 350              		.loc 2 140 27 view .LVU74
 351              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 352              		.loc 2 142 3 view .LVU75
 353              		.syntax unified
 354              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 355 0000 72B6     		cpsid i
 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359              	.L24:
 360              	.LBE8:
 361              	.LBE7:
 197:Core/Src/main.c ****   while (1)
 362              		.loc 1 197 3 discriminator 1 view .LVU76
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****   }
 363              		.loc 1 199 3 discriminator 1 view .LVU77
 197:Core/Src/main.c ****   while (1)
 364              		.loc 1 197 9 discriminator 1 view .LVU78
 365 0002 FEE7     		b	.L24
 366              		.cfi_endproc
 367              	.LFE71:
 369              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/cc1JcXpx.s 			page 14


 370              		.align	1
 371              		.global	SystemClock_Config
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	SystemClock_Config:
 378              	.LFB69:
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 379              		.loc 1 118 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 64
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 00B5     		push	{lr}
 384              	.LCFI6:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 14, -4
 387 0002 91B0     		sub	sp, sp, #68
 388              	.LCFI7:
 389              		.cfi_def_cfa_offset 72
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 390              		.loc 1 119 3 view .LVU80
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 391              		.loc 1 119 22 is_stmt 0 view .LVU81
 392 0004 2822     		movs	r2, #40
 393 0006 0021     		movs	r1, #0
 394 0008 06A8     		add	r0, sp, #24
 395 000a FFF7FEFF 		bl	memset
 396              	.LVL24:
 120:Core/Src/main.c **** 
 397              		.loc 1 120 3 is_stmt 1 view .LVU82
 120:Core/Src/main.c **** 
 398              		.loc 1 120 22 is_stmt 0 view .LVU83
 399 000e 0023     		movs	r3, #0
 400 0010 0193     		str	r3, [sp, #4]
 401 0012 0293     		str	r3, [sp, #8]
 402 0014 0393     		str	r3, [sp, #12]
 403 0016 0493     		str	r3, [sp, #16]
 404 0018 0593     		str	r3, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 405              		.loc 1 125 3 is_stmt 1 view .LVU84
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 406              		.loc 1 125 36 is_stmt 0 view .LVU85
 407 001a 0122     		movs	r2, #1
 408 001c 0692     		str	r2, [sp, #24]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 409              		.loc 1 126 3 is_stmt 1 view .LVU86
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 410              		.loc 1 126 30 is_stmt 0 view .LVU87
 411 001e 4FF48033 		mov	r3, #65536
 412 0022 0793     		str	r3, [sp, #28]
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 413              		.loc 1 127 3 is_stmt 1 view .LVU88
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 414              		.loc 1 128 3 view .LVU89
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 415              		.loc 1 128 30 is_stmt 0 view .LVU90
ARM GAS  /tmp/cc1JcXpx.s 			page 15


 416 0024 0A92     		str	r2, [sp, #40]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 417              		.loc 1 129 3 is_stmt 1 view .LVU91
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 418              		.loc 1 129 34 is_stmt 0 view .LVU92
 419 0026 0222     		movs	r2, #2
 420 0028 0D92     		str	r2, [sp, #52]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 421              		.loc 1 130 3 is_stmt 1 view .LVU93
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 422              		.loc 1 130 35 is_stmt 0 view .LVU94
 423 002a 0E93     		str	r3, [sp, #56]
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 424              		.loc 1 131 3 is_stmt 1 view .LVU95
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 425              		.loc 1 131 32 is_stmt 0 view .LVU96
 426 002c 4FF4E013 		mov	r3, #1835008
 427 0030 0F93     		str	r3, [sp, #60]
 132:Core/Src/main.c ****   {
 428              		.loc 1 132 3 is_stmt 1 view .LVU97
 132:Core/Src/main.c ****   {
 429              		.loc 1 132 7 is_stmt 0 view .LVU98
 430 0032 06A8     		add	r0, sp, #24
 431 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 432              	.LVL25:
 132:Core/Src/main.c ****   {
 433              		.loc 1 132 6 view .LVU99
 434 0038 80B9     		cbnz	r0, .L29
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 435              		.loc 1 139 3 is_stmt 1 view .LVU100
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 436              		.loc 1 139 31 is_stmt 0 view .LVU101
 437 003a 0F23     		movs	r3, #15
 438 003c 0193     		str	r3, [sp, #4]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 439              		.loc 1 141 3 is_stmt 1 view .LVU102
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 440              		.loc 1 141 34 is_stmt 0 view .LVU103
 441 003e 0221     		movs	r1, #2
 442 0040 0291     		str	r1, [sp, #8]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 443              		.loc 1 142 3 is_stmt 1 view .LVU104
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 444              		.loc 1 142 35 is_stmt 0 view .LVU105
 445 0042 0023     		movs	r3, #0
 446 0044 0393     		str	r3, [sp, #12]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 447              		.loc 1 143 3 is_stmt 1 view .LVU106
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 448              		.loc 1 143 36 is_stmt 0 view .LVU107
 449 0046 4FF48062 		mov	r2, #1024
 450 004a 0492     		str	r2, [sp, #16]
 144:Core/Src/main.c **** 
 451              		.loc 1 144 3 is_stmt 1 view .LVU108
 144:Core/Src/main.c **** 
 452              		.loc 1 144 36 is_stmt 0 view .LVU109
 453 004c 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/cc1JcXpx.s 			page 16


 146:Core/Src/main.c ****   {
 454              		.loc 1 146 3 is_stmt 1 view .LVU110
 146:Core/Src/main.c ****   {
 455              		.loc 1 146 7 is_stmt 0 view .LVU111
 456 004e 01A8     		add	r0, sp, #4
 457 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 458              	.LVL26:
 146:Core/Src/main.c ****   {
 459              		.loc 1 146 6 view .LVU112
 460 0054 20B9     		cbnz	r0, .L30
 150:Core/Src/main.c **** 
 461              		.loc 1 150 1 view .LVU113
 462 0056 11B0     		add	sp, sp, #68
 463              	.LCFI8:
 464              		.cfi_remember_state
 465              		.cfi_def_cfa_offset 4
 466              		@ sp needed
 467 0058 5DF804FB 		ldr	pc, [sp], #4
 468              	.L29:
 469              	.LCFI9:
 470              		.cfi_restore_state
 134:Core/Src/main.c ****   }
 471              		.loc 1 134 5 is_stmt 1 view .LVU114
 472 005c FFF7FEFF 		bl	Error_Handler
 473              	.LVL27:
 474              	.L30:
 148:Core/Src/main.c ****   }
 475              		.loc 1 148 5 view .LVU115
 476 0060 FFF7FEFF 		bl	Error_Handler
 477              	.LVL28:
 478              		.cfi_endproc
 479              	.LFE69:
 481              		.section	.text.main,"ax",%progbits
 482              		.align	1
 483              		.global	main
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu softvfp
 489              	main:
 490              	.LFB68:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 491              		.loc 1 67 1 view -0
 492              		.cfi_startproc
 493              		@ Volatile: function does not return.
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496 0000 08B5     		push	{r3, lr}
 497              	.LCFI10:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 3, -8
 500              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 501              		.loc 1 75 3 view .LVU117
 502 0002 FFF7FEFF 		bl	HAL_Init
 503              	.LVL29:
  82:Core/Src/main.c **** 
ARM GAS  /tmp/cc1JcXpx.s 			page 17


 504              		.loc 1 82 3 view .LVU118
 505 0006 FFF7FEFF 		bl	SystemClock_Config
 506              	.LVL30:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 507              		.loc 1 89 3 view .LVU119
 508 000a FFF7FEFF 		bl	MX_GPIO_Init
 509              	.LVL31:
 510              	.L32:
  96:Core/Src/main.c ****   {
 511              		.loc 1 96 3 view .LVU120
  99:Core/Src/main.c ****         HAL_Delay(500);
 512              		.loc 1 99 5 view .LVU121
  99:Core/Src/main.c ****         HAL_Delay(500);
 513              		.loc 1 99 9 is_stmt 0 view .LVU122
 514 000e 4FF40051 		mov	r1, #8192
 515 0012 0B48     		ldr	r0, .L35
 516 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 517              	.LVL32:
  99:Core/Src/main.c ****         HAL_Delay(500);
 518              		.loc 1 99 7 view .LVU123
 519 0018 0028     		cmp	r0, #0
 520 001a F8D1     		bne	.L32
 100:Core/Src/main.c ****         pinState = ~pinState;
 521              		.loc 1 100 9 is_stmt 1 view .LVU124
 522 001c 4FF4FA70 		mov	r0, #500
 523 0020 FFF7FEFF 		bl	HAL_Delay
 524              	.LVL33:
 101:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,pinState);
 525              		.loc 1 101 9 view .LVU125
 101:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA,GPIO_PIN_5,pinState);
 526              		.loc 1 101 18 is_stmt 0 view .LVU126
 527 0024 074B     		ldr	r3, .L35+4
 528 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 529 0028 D243     		mvns	r2, r2
 530 002a D2B2     		uxtb	r2, r2
 531 002c 1A70     		strb	r2, [r3]
 102:Core/Src/main.c ****         // HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_5);
 532              		.loc 1 102 9 is_stmt 1 view .LVU127
 533 002e 2021     		movs	r1, #32
 534 0030 0548     		ldr	r0, .L35+8
 535 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 536              	.LVL34:
 104:Core/Src/main.c ****       }
 537              		.loc 1 104 9 view .LVU128
 538 0036 4FF47A70 		mov	r0, #1000
 539 003a FFF7FEFF 		bl	HAL_Delay
 540              	.LVL35:
 541 003e E6E7     		b	.L32
 542              	.L36:
 543              		.align	2
 544              	.L35:
 545 0040 00100140 		.word	1073811456
 546 0044 00000000 		.word	.LANCHOR3
 547 0048 00080140 		.word	1073809408
 548              		.cfi_endproc
 549              	.LFE68:
 551              		.global	pinStateH
ARM GAS  /tmp/cc1JcXpx.s 			page 18


 552              		.global	pinState
 553              		.section	.bss.pinState,"aw",%nobits
 554              		.set	.LANCHOR3,. + 0
 557              	pinState:
 558 0000 00       		.space	1
 559              		.section	.bss.pinStateH,"aw",%nobits
 562              	pinStateH:
 563 0000 00       		.space	1
 564              		.section	.rodata.__func__.0,"a"
 565              		.align	2
 566              		.set	.LANCHOR2,. + 0
 569              	__func__.0:
 570 0000 6C65645F 		.ascii	"led_blinkpin\000"
 570      626C696E 
 570      6B70696E 
 570      00
 571              		.section	.rodata.__func__.1,"a"
 572              		.align	2
 573              		.set	.LANCHOR1,. + 0
 576              	__func__.1:
 577 0000 6C65645F 		.ascii	"led_erasepin\000"
 577      65726173 
 577      6570696E 
 577      00
 578              		.section	.rodata.__func__.2,"a"
 579              		.align	2
 580              		.set	.LANCHOR0,. + 0
 583              	__func__.2:
 584 0000 6C65645F 		.ascii	"led_writepin\000"
 584      77726974 
 584      6570696E 
 584      00
 585              		.text
 586              	.Letext0:
 587              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 588              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 589              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 590              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 591              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 592              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 593              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 594              		.file 10 "/usr/include/newlib/assert.h"
 595              		.file 11 "<built-in>"
ARM GAS  /tmp/cc1JcXpx.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc1JcXpx.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc1JcXpx.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc1JcXpx.s:144    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/cc1JcXpx.s:151    .rodata.led_writepin.str1.4:0000000000000000 $d
     /tmp/cc1JcXpx.s:158    .text.led_writepin:0000000000000000 $t
     /tmp/cc1JcXpx.s:165    .text.led_writepin:0000000000000000 led_writepin
     /tmp/cc1JcXpx.s:209    .text.led_writepin:0000000000000020 $d
     /tmp/cc1JcXpx.s:216    .text.led_erasepin:0000000000000000 $t
     /tmp/cc1JcXpx.s:223    .text.led_erasepin:0000000000000000 led_erasepin
     /tmp/cc1JcXpx.s:267    .text.led_erasepin:0000000000000020 $d
     /tmp/cc1JcXpx.s:274    .text.led_blinkpin:0000000000000000 $t
     /tmp/cc1JcXpx.s:281    .text.led_blinkpin:0000000000000000 led_blinkpin
     /tmp/cc1JcXpx.s:324    .text.led_blinkpin:000000000000001c $d
     /tmp/cc1JcXpx.s:331    .text.Error_Handler:0000000000000000 $t
     /tmp/cc1JcXpx.s:338    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc1JcXpx.s:370    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc1JcXpx.s:377    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc1JcXpx.s:482    .text.main:0000000000000000 $t
     /tmp/cc1JcXpx.s:489    .text.main:0000000000000000 main
     /tmp/cc1JcXpx.s:545    .text.main:0000000000000040 $d
     /tmp/cc1JcXpx.s:562    .bss.pinStateH:0000000000000000 pinStateH
     /tmp/cc1JcXpx.s:557    .bss.pinState:0000000000000000 pinState
     /tmp/cc1JcXpx.s:558    .bss.pinState:0000000000000000 $d
     /tmp/cc1JcXpx.s:563    .bss.pinStateH:0000000000000000 $d
     /tmp/cc1JcXpx.s:565    .rodata.__func__.0:0000000000000000 $d
     /tmp/cc1JcXpx.s:569    .rodata.__func__.0:0000000000000000 __func__.0
     /tmp/cc1JcXpx.s:572    .rodata.__func__.1:0000000000000000 $d
     /tmp/cc1JcXpx.s:576    .rodata.__func__.1:0000000000000000 __func__.1
     /tmp/cc1JcXpx.s:579    .rodata.__func__.2:0000000000000000 $d
     /tmp/cc1JcXpx.s:583    .rodata.__func__.2:0000000000000000 __func__.2

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__assert_func
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_ReadPin
HAL_Delay
